** start of script.js **

class BankAccount {
  constructor() {
    this.balance = 0;
    this.transactions = [];
  }

  deposit(amount) {
    if (amount > 0) {
      this.transactions.push({ type: 'deposit', amount: amount });
      this.balance += amount;
      return `Successfully deposited $${amount}. New balance: $${this.balance}`;
    } else {
      return "Deposit amount must be greater than zero.";
    }
  }

  withdraw(amount) {
    if (amount > 0 && amount <= this.balance) {
      this.transactions.push({ type: 'withdraw', amount: amount });
      this.balance -= amount;
      return `Successfully withdrew $${amount}. New balance: $${this.balance}`;
    } else {
      return "Insufficient balance or invalid amount.";
    }
  }

  checkBalance() {
    return `Current balance: $${this.balance}`;
  }

  listAllDeposits() {
    const deposits = this.transactions
      .filter(tx => tx.type === 'deposit')
      .map(tx => tx.amount);
    return `Deposits: ${deposits.join(',')}`;
  }

  listAllWithdrawals() {
    const withdrawals = this.transactions
      .filter(tx => tx.type === 'withdraw')
      .map(tx => tx.amount);
    return `Withdrawals: ${withdrawals.join(',')}`;
  }
}

// Create instance and perform at least 5 transactions
const myAccount = new BankAccount();
myAccount.deposit(150);     // 1st deposit
myAccount.deposit(75);      // 2nd deposit
myAccount.withdraw(50);     // 1st withdrawal
myAccount.withdraw(30);     // 2nd withdrawal
myAccount.deposit(20);      // 3rd deposit

// Optional: You can test it here
// console.log(myAccount.checkBalance());
// console.log(myAccount.listAllDeposits());
// console.log(myAccount.listAllWithdrawals());


** end of script.js **

